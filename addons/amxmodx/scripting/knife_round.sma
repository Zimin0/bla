/* Script generated by Pawn Studio */

#include <amxmodx>
#include <fun>

new const PLUGIN[] = "Knife Round"
new const VERSION[] = "1.2"
new const AUTHOR[] = "jas0n"

new const g_HudMessage[] = "KNIFE!  KNIFE!  KNIFE!"

new bool:g_IsKnifeRound
new bool:g_IsCommencing
new g_SyncMsgObj

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)

	register_event("TextMsg", "eGameCommencing", "a", "2=#Game_Commencing")
	register_event("CurWeapon", "eCurWeapon", "be", "1=1", "2!29" )
	register_logevent("eStartRound", 2, "0=World triggered", "1=Round_Start")
	register_logevent("eEndRound", 2, "1=Round_End")
	register_logevent("eRestartRound", 2, "1&Restart_Round_")

	g_SyncMsgObj = CreateHudSyncObj()
}

public eGameCommencing()
{
	g_IsCommencing = true
}

public eStartRound()
{
	if (!g_IsCommencing)
		return PLUGIN_HANDLED
	
	g_IsKnifeRound = true
	
	restrict_weapons()
	strip_weapons()

	set_hudmessage(0, 225, 0, -1.0, 0.35, 1, 2.0, 6.0, _, _, -1)
	ShowSyncHudMsg(0, g_SyncMsgObj, g_HudMessage)
	
	return PLUGIN_CONTINUE
}

public eEndRound()
{
	if(!g_IsKnifeRound)
		return PLUGIN_HANDLED

	g_IsCommencing = false
	g_IsKnifeRound = false
	
	unstrict_weapons()
	
	pause("ad")
	
	return PLUGIN_CONTINUE
}

public eRestartRound()
{
	if(!g_IsKnifeRound)
		return PLUGIN_HANDLED
	
	eStartRound()
	
	return PLUGIN_CONTINUE
}

public eCurWeapon(id)
{
	if (g_IsKnifeRound)
		knife_only(id)
}

restrict_weapons()
{
	server_cmd("amx_restrict on ammo")
	server_cmd("amx_restrict on equip")
	server_cmd("amx_restrict on pistol")
	server_cmd("amx_restrict on shotgun")
	server_cmd("amx_restrict on sub")
	server_cmd("amx_restrict on rifle")
	server_cmd("amx_restrict on machine")
	server_cmd("amx_restrict on shield")
}

unstrict_weapons()
{
	server_cmd("amx_restrict off ammo")
	server_cmd("amx_restrict off equip")
	server_cmd("amx_restrict off pistol")
	server_cmd("amx_restrict off shotgun")
	server_cmd("amx_restrict off sub")
	server_cmd("amx_restrict off rifle")
	server_cmd("amx_restrict off machine")
	server_cmd("amx_restrict on shield")
}

strip_weapons()
{
	static plist[32], pnum, player
	
	get_players(plist, pnum)
	
	for (--pnum ; pnum >= 0 ; pnum--)
	{
		player = plist[pnum]
		
		if (is_user_alive(player))
			knife_only(player)
	}
}

knife_only(id)
{
	strip_user_weapons(id)
	give_item(id, "weapon_knife")
}